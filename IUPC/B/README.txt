[B] Sort 마스터 배지훈의 후계자

문제
----
지훈이는 Sort 마스터다. 오랫동안 Sort 마스터 자리를 지켜온 지훈이는 이제 마스터 자리를 후계자에게 물려주려고 한다. 수많은 제자들 중에 후계자를 고르기 위해서 지훈이는 제자들에게 문제를 준비했다. 먼저 제자들에게 N개의 원소를 가진 배열A를 주고, A의 원소들이 오름차순으로 정렬된 배열B를 만들게 한다. 그다음 M개의 질문을 한다. 각 질문에는 정수 D가 주어진다. 제자들은 주어진 정수D가 B에서 가장 먼저 등장한 위치를 출력하면 된다. 단, D가 B에 존재하지 않는 경우에는 -1를 출력한다. Sort 마스터의 자리를 너무나도 물려받고 싶은 창국이를 위해 지훈이의 문제를 풀 수 있는 프로그램을 만들어 주자.

입력
----
첫째 줄에 배열A의 원소의 개수 N과 질문의 개수 M이 공백으로 구분되어 주어진다.

다음 줄부터 N줄에 걸쳐 정수 A0, A1, ... , An-1 이 주어진다.

다음 줄부터M 줄에 걸쳐 정수 D가 주어진다.

출력
----
M개의 질문에 대해서 주어진 D가 B에서 처음으로 등장한 위치를 출력한다. 단, 존재하지 않는다면 -1를 출력한다. (배열에서 가장 앞의 원소의 위치는 0이다.)

제한
----
1 ≤ N ≤ 2×10^5
1 ≤ M ≤ 2×10^5
-10^9 ≤ Ai ≤ 10^9
-10^9 ≤ D ≤ 10^9
Time Limit : 2s

풀이
----
약 20만개의 data를 2초안에 insert, search하기 위해서는 각 연산의 시간복잡도가 O(logN) 이하여야 한다.

 - C++ STL algorithm헤더의 sort는 quick sort기반이지만, partition 횟수가 많을수록 worst case인 O(N)까지 성능이 저하되는데, 이를 스스로 모니터링하다가 정의된 임계값에 도달할 경우 heap sort로 스위칭되도록 개선하였기 때문에 항상 O(logN)을 보장하는 함수이다.
 - 참고 : http://egloos.zum.com/js7309/v/11163475

 - C++ STL algorithm헤더의 lower_bound는 정렬된 리스트에 대해 이분탐색을 하여 O(logN)에 [first, last)에 대해 key값보다 크거나 같은 최초의 위치를 찾는 함수이다. 
 - 리턴값에 배열의 첫 주소를 빼주면 해당 index값을 얻을 수 있으며, 출력 시 찾으려는 key값이 없는 경우와 이 함수가 배열 범위를 넘어가는 경우도 고려해주어야한다.


